plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}
// apply plugin: "com.android.application"
// apply plugin: "kotlin-android"
// apply plugin: "dev.flutter.flutter-gradle-plugin"
// apply plugin: 'com.google.gms.google-services'

android {
    namespace = "com.example.emart_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"  // Try "17" or lower (e.g., "11") if 17 is unsupported
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.emart_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
         multiDexEnabled true
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}
dependencies {
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
    // implementation platform('com.google.firebase:firebase-bom:33.1.2')
    // implementation 'com.google.firebase:firebase-analytics-ktx'
    // implementation 'androidx.multidex:multidex:2.0.1'
    // // Other dependencies...
    
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity:17.0.0'  // Check for the latest version


}

flutter {
    source = "../.."
}
